// Generated by CIRCT firtool-1.62.0
module Shifter8bit(
  input        clock,
               reset,
               io_in,
               io_pallelClock,
  output [7:0] io_out
);

  reg  [7:0] outputReg;
  wire       negClock = ~clock;
  reg  [7:0] shiftReg;
  always @(posedge clock) begin
    if (reset)
      outputReg <= 8'h0;
    else if (io_pallelClock)
      outputReg <= shiftReg;
  end // always @(posedge)
  always @(posedge negClock) begin
    if (reset)
      shiftReg <= 8'h0;
    else
      shiftReg <= {shiftReg[6:0], io_in};
  end // always @(posedge)
  assign io_out = outputReg;
endmodule

