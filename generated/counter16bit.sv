// Generated by CIRCT firtool-1.62.0
module counter16bit(
  input         clock,
                reset,
  input  [7:0]  io_lowerIn,
                io_upperIn,
  input         io_lowerWrite,
                io_upperWrite,
  output [15:0] io_out
);

  reg [7:0] lowCounterReg;
  reg [7:0] highCounterReg;
  always @(posedge clock) begin
    if (reset) begin
      lowCounterReg <= 8'h0;
      highCounterReg <= 8'h0;
    end
    else begin
      if (io_lowerWrite)
        lowCounterReg <= io_lowerIn;
      else
        lowCounterReg <= lowCounterReg + 8'h1;
      if (io_upperWrite)
        highCounterReg <= io_upperIn;
      else if (&lowCounterReg)
        highCounterReg <= highCounterReg + 8'h1;
    end
  end // always @(posedge)
  assign io_out = {highCounterReg, lowCounterReg};
endmodule

