// Generated by CIRCT firtool-1.62.0
module TimerFSM(
  input  clock,
         reset,
         io_load,
         io_select,
  output io_done
);

  reg [2:0] countReg;
  reg       doneReg;
  always @(posedge clock) begin
    if (reset) begin
      countReg <= 3'h0;
      doneReg <= 1'h1;
    end
    else begin
      automatic logic _GEN;
      _GEN = ~io_select & countReg == 3'h5 | io_select & countReg == 3'h3;
      if (doneReg) begin
      end
      else if (_GEN)
        countReg <= 3'h0;
      else
        countReg <= countReg + 3'h1;
      doneReg <= ~(doneReg & io_load) & (~doneReg & _GEN | doneReg);
    end
  end // always @(posedge)
  assign io_done = doneReg;
endmodule

