// Generated by CIRCT firtool-1.62.0
module TimerFSM(
  input  clock,
         reset,
         io_load,
         io_select,
  output io_done
);

  reg  [2:0] countReg;
  reg        doneReg;
  wire       _GEN = doneReg & io_load;
  always @(posedge clock) begin
    if (reset) begin
      countReg <= 3'h0;
      doneReg <= 1'h1;
    end
    else begin
      automatic logic _GEN_0;
      _GEN_0 = ~io_select & countReg == 3'h2 | io_select & countReg == 3'h0;
      if (doneReg) begin
      end
      else if (_GEN_0)
        countReg <= 3'h0;
      else
        countReg <= countReg + 3'h1;
      doneReg <= ~_GEN & (~doneReg & _GEN_0 | doneReg);
    end
  end // always @(posedge)
  assign io_done = ~(~doneReg | _GEN);
endmodule

