// Generated by CIRCT firtool-1.62.0
module FSM(
  input  clock,
         reset,
         io_prevValid,
         io_nextReady,
         io_countReady,
  output io_prevReady,
         io_nextValid,
         io_loadData
);

  reg  [1:0] stateReg;
  wire       io_prevReady_0 = stateReg == 2'h0;
  wire       _GEN = stateReg == 2'h1;
  wire       _GEN_0 = stateReg == 2'h2;
  always @(posedge clock) begin
    if (reset)
      stateReg <= 2'h0;
    else if (io_prevReady_0) begin
      if (io_prevValid)
        stateReg <= 2'h1;
    end
    else if (_GEN) begin
      if (io_countReady)
        stateReg <= 2'h2;
    end
    else if (_GEN_0 & io_nextReady)
      stateReg <= 2'h0;
  end // always @(posedge)
  assign io_prevReady = io_prevReady_0;
  assign io_nextValid = io_prevReady_0 | ~_GEN & _GEN_0;
  assign io_loadData = io_prevReady_0 | ~_GEN & ~_GEN_0;
endmodule

