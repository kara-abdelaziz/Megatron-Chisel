// Generated by CIRCT firtool-1.62.0
module CU(
  input        clock,
               reset,
  input  [7:0] io_opCode,
  input        io_acc7,
               io_a_eq_b,
  output [1:0] io_dBusAccess,
               io_ramAddrSel,
  output       io_ramWrite,
               io_xWrite,
               io_xInc,
               io_yWrite,
               io_accWrite,
               io_iocWrite,
               io_inputEnble,
               io_outputEnble,
               io_ioCtlEnble,
               io_pcHighWrite,
               io_pcLowWrite,
  output [2:0] io_aluFuct
);

  wire io_ioCtlEnble_0;
  assign io_ioCtlEnble_0 = io_opCode == 8'hD5;
  wire io_pcHighWrite_0 = (&(io_opCode[7:5])) & io_opCode[4:2] == 3'h0;
  assign io_dBusAccess =
    io_opCode[7:5] == 3'h6 & io_opCode[1:0] == 2'h1
      ? ((&(io_opCode[4:2]))
           ? 2'h3
           : io_opCode[4:2] == 3'h6
               ? 2'h2
               : {1'h0, io_opCode[4:2] != 3'h5 & io_opCode[4:2] != 3'h4})
      : io_opCode[1:0];
  assign io_ramAddrSel =
    {io_opCode[4:2] == 3'h2 | io_opCode[4:2] == 3'h3 | (&(io_opCode[4:2])),
     io_opCode[4:2] == 3'h1 | io_opCode[4:2] == 3'h3 | (&(io_opCode[4:2]))};
  assign io_ramWrite = io_opCode[7:5] == 3'h6 & io_opCode[1:0] != 2'h1;
  assign io_xWrite = io_opCode[4:2] == 3'h4 & io_opCode[7:5] != 3'h7;
  assign io_xInc = (&(io_opCode[4:2])) & io_opCode[7:5] != 3'h7;
  assign io_yWrite = io_opCode[4:2] == 3'h5 & io_opCode[7:5] != 3'h7;
  assign io_accWrite = ~(io_opCode[4]) & io_opCode[7:6] != 2'h3;
  assign io_iocWrite = io_opCode[7:5] == 3'h6 & io_opCode[1:0] == 2'h1 & ~io_ioCtlEnble_0;
  assign io_inputEnble = &(io_opCode[1:0]);
  assign io_outputEnble = (&(io_opCode[4:3])) & io_opCode[7:6] != 2'h3;
  assign io_ioCtlEnble = io_ioCtlEnble_0;
  assign io_pcHighWrite = io_pcHighWrite_0;
  assign io_pcLowWrite =
    io_pcHighWrite_0 | (&(io_opCode[7:5]))
    & (io_a_eq_b & io_acc7 ? io_opCode[3] : io_opCode[2]);
  assign io_aluFuct = io_opCode[7:5];
endmodule

