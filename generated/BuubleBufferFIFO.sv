// Generated by CIRCT firtool-1.62.0
module BubbleFSMBuffer(
  input        clock,
               reset,
  input  [7:0] io_in_dataIn,
  input        io_in_write,
  output       io_in_full,
  output [7:0] io_out_dataOut,
  input        io_out_ready,
  output       io_out_empty
);

  reg [7:0] dataReg;
  reg       stateReg;
  always @(posedge clock) begin
    automatic logic _GEN;
    _GEN = stateReg & io_out_ready;
    if (stateReg) begin
      if (_GEN)
        dataReg <= 8'h0;
    end
    else if (io_in_write)
      dataReg <= io_in_dataIn;
    if (reset)
      stateReg <= 1'h0;
    else if (stateReg)
      stateReg <= ~_GEN & stateReg;
    else
      stateReg <= io_in_write | stateReg;
  end // always @(posedge)
  assign io_in_full = stateReg;
  assign io_out_dataOut = dataReg;
  assign io_out_empty = ~stateReg;
endmodule

module BuubleBufferFIFO(
  input        clock,
               reset,
  input  [7:0] io_in_dataIn,
  input        io_in_write,
  output       io_in_full,
  output [7:0] io_out_dataOut,
  input        io_out_ready,
  output       io_out_empty
);

  wire       _BubbleFSMBuffer_7_io_in_full;
  wire       _BubbleFSMBuffer_6_io_in_full;
  wire [7:0] _BubbleFSMBuffer_6_io_out_dataOut;
  wire       _BubbleFSMBuffer_6_io_out_empty;
  wire       _BubbleFSMBuffer_5_io_in_full;
  wire [7:0] _BubbleFSMBuffer_5_io_out_dataOut;
  wire       _BubbleFSMBuffer_5_io_out_empty;
  wire       _BubbleFSMBuffer_4_io_in_full;
  wire [7:0] _BubbleFSMBuffer_4_io_out_dataOut;
  wire       _BubbleFSMBuffer_4_io_out_empty;
  wire       _BubbleFSMBuffer_3_io_in_full;
  wire [7:0] _BubbleFSMBuffer_3_io_out_dataOut;
  wire       _BubbleFSMBuffer_3_io_out_empty;
  wire       _BubbleFSMBuffer_2_io_in_full;
  wire [7:0] _BubbleFSMBuffer_2_io_out_dataOut;
  wire       _BubbleFSMBuffer_2_io_out_empty;
  wire       _BubbleFSMBuffer_1_io_in_full;
  wire [7:0] _BubbleFSMBuffer_1_io_out_dataOut;
  wire       _BubbleFSMBuffer_1_io_out_empty;
  wire [7:0] _BubbleFSMBuffer_io_out_dataOut;
  wire       _BubbleFSMBuffer_io_out_empty;
  BubbleFSMBuffer BubbleFSMBuffer (
    .clock          (clock),
    .reset          (reset),
    .io_in_dataIn   (io_in_dataIn),
    .io_in_write    (io_in_write),
    .io_in_full     (io_in_full),
    .io_out_dataOut (_BubbleFSMBuffer_io_out_dataOut),
    .io_out_ready   (~_BubbleFSMBuffer_1_io_in_full),
    .io_out_empty   (_BubbleFSMBuffer_io_out_empty)
  );
  BubbleFSMBuffer BubbleFSMBuffer_1 (
    .clock          (clock),
    .reset          (reset),
    .io_in_dataIn   (_BubbleFSMBuffer_io_out_dataOut),
    .io_in_write    (~_BubbleFSMBuffer_io_out_empty),
    .io_in_full     (_BubbleFSMBuffer_1_io_in_full),
    .io_out_dataOut (_BubbleFSMBuffer_1_io_out_dataOut),
    .io_out_ready   (~_BubbleFSMBuffer_2_io_in_full),
    .io_out_empty   (_BubbleFSMBuffer_1_io_out_empty)
  );
  BubbleFSMBuffer BubbleFSMBuffer_2 (
    .clock          (clock),
    .reset          (reset),
    .io_in_dataIn   (_BubbleFSMBuffer_1_io_out_dataOut),
    .io_in_write    (~_BubbleFSMBuffer_1_io_out_empty),
    .io_in_full     (_BubbleFSMBuffer_2_io_in_full),
    .io_out_dataOut (_BubbleFSMBuffer_2_io_out_dataOut),
    .io_out_ready   (~_BubbleFSMBuffer_3_io_in_full),
    .io_out_empty   (_BubbleFSMBuffer_2_io_out_empty)
  );
  BubbleFSMBuffer BubbleFSMBuffer_3 (
    .clock          (clock),
    .reset          (reset),
    .io_in_dataIn   (_BubbleFSMBuffer_2_io_out_dataOut),
    .io_in_write    (~_BubbleFSMBuffer_2_io_out_empty),
    .io_in_full     (_BubbleFSMBuffer_3_io_in_full),
    .io_out_dataOut (_BubbleFSMBuffer_3_io_out_dataOut),
    .io_out_ready   (~_BubbleFSMBuffer_4_io_in_full),
    .io_out_empty   (_BubbleFSMBuffer_3_io_out_empty)
  );
  BubbleFSMBuffer BubbleFSMBuffer_4 (
    .clock          (clock),
    .reset          (reset),
    .io_in_dataIn   (_BubbleFSMBuffer_3_io_out_dataOut),
    .io_in_write    (~_BubbleFSMBuffer_3_io_out_empty),
    .io_in_full     (_BubbleFSMBuffer_4_io_in_full),
    .io_out_dataOut (_BubbleFSMBuffer_4_io_out_dataOut),
    .io_out_ready   (~_BubbleFSMBuffer_5_io_in_full),
    .io_out_empty   (_BubbleFSMBuffer_4_io_out_empty)
  );
  BubbleFSMBuffer BubbleFSMBuffer_5 (
    .clock          (clock),
    .reset          (reset),
    .io_in_dataIn   (_BubbleFSMBuffer_4_io_out_dataOut),
    .io_in_write    (~_BubbleFSMBuffer_4_io_out_empty),
    .io_in_full     (_BubbleFSMBuffer_5_io_in_full),
    .io_out_dataOut (_BubbleFSMBuffer_5_io_out_dataOut),
    .io_out_ready   (~_BubbleFSMBuffer_6_io_in_full),
    .io_out_empty   (_BubbleFSMBuffer_5_io_out_empty)
  );
  BubbleFSMBuffer BubbleFSMBuffer_6 (
    .clock          (clock),
    .reset          (reset),
    .io_in_dataIn   (_BubbleFSMBuffer_5_io_out_dataOut),
    .io_in_write    (~_BubbleFSMBuffer_5_io_out_empty),
    .io_in_full     (_BubbleFSMBuffer_6_io_in_full),
    .io_out_dataOut (_BubbleFSMBuffer_6_io_out_dataOut),
    .io_out_ready   (~_BubbleFSMBuffer_7_io_in_full),
    .io_out_empty   (_BubbleFSMBuffer_6_io_out_empty)
  );
  BubbleFSMBuffer BubbleFSMBuffer_7 (
    .clock          (clock),
    .reset          (reset),
    .io_in_dataIn   (_BubbleFSMBuffer_6_io_out_dataOut),
    .io_in_write    (~_BubbleFSMBuffer_6_io_out_empty),
    .io_in_full     (_BubbleFSMBuffer_7_io_in_full),
    .io_out_dataOut (io_out_dataOut),
    .io_out_ready   (io_out_ready),
    .io_out_empty   (io_out_empty)
  );
endmodule

