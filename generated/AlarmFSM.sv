// Generated by CIRCT firtool-1.62.0
module AlarmFSM(
  input  clock,
         reset,
         io_badEvent,
         io_clear,
  output io_alarm
);

  reg [1:0] stateReg;
  always @(posedge clock) begin
    if (reset)
      stateReg <= 2'h0;
    else if (stateReg == 2'h0) begin
      if (io_badEvent)
        stateReg <= 2'h1;
    end
    else if (stateReg == 2'h1) begin
      if (io_badEvent)
        stateReg <= 2'h2;
      else if (io_clear)
        stateReg <= 2'h0;
    end
    else if (stateReg == 2'h2 & io_clear & ~io_badEvent)
      stateReg <= 2'h0;
  end // always @(posedge)
  assign io_alarm = stateReg == 2'h2;
endmodule

