// Generated by CIRCT firtool-1.62.0
// VCS coverage exclude_file
module mem_16x8(
  input  [3:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [7:0] R0_data,
  input  [3:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [7:0] W0_data
);

  reg [7:0] Memory[0:15];
  reg       _R0_en_d0;
  reg [3:0] _R0_addr_d0;
  always @(posedge R0_clk) begin
    _R0_en_d0 <= R0_en;
    _R0_addr_d0 <= R0_addr;
  end // always @(posedge)
  always @(posedge W0_clk) begin
    if (W0_en & 1'h1)
      Memory[W0_addr] <= W0_data;
  end // always @(posedge)
  assign R0_data = _R0_en_d0 ? Memory[_R0_addr_d0] : 8'bx;
endmodule

module Memory(
  input        clock,
               reset,
  input  [3:0] io_readAddress,
               io_writeAddress,
  input        io_writeEnable,
  input  [7:0] io_writeData,
  output [7:0] io_readData
);

  mem_16x8 mem_ext (
    .R0_addr (io_readAddress),
    .R0_en   (1'h1),
    .R0_clk  (clock),
    .R0_data (io_readData),
    .W0_addr (io_writeAddress),
    .W0_en   (io_writeEnable),
    .W0_clk  (clock),
    .W0_data (io_writeData)
  );
endmodule

