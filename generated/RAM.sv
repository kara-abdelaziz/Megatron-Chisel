// Generated by CIRCT firtool-1.62.0
// VCS coverage exclude_file
module ram_65536x8(	// src/main/scala/Megatron/RAM.scala:18:25
  input  [15:0] R0_addr,
  input         R0_en,
                R0_clk,
  output [7:0]  R0_data,
  input  [15:0] W0_addr,
  input         W0_en,
                W0_clk,
  input  [7:0]  W0_data
);

  reg [7:0] Memory[0:65535];	// src/main/scala/Megatron/RAM.scala:18:25
  always @(posedge W0_clk) begin	// src/main/scala/Megatron/RAM.scala:18:25
    if (W0_en & 1'h1)	// src/main/scala/Megatron/RAM.scala:18:25
      Memory[W0_addr] <= W0_data;	// src/main/scala/Megatron/RAM.scala:18:25
  end // always @(posedge)
  assign R0_data = R0_en ? Memory[R0_addr] : 8'bx;	// src/main/scala/Megatron/RAM.scala:18:25
endmodule

module RAM(	// src/main/scala/Megatron/RAM.scala:7:8
  input         clock,	// src/main/scala/Megatron/RAM.scala:7:8
                reset,	// src/main/scala/Megatron/RAM.scala:7:8
  input  [7:0]  io_in,	// src/main/scala/Megatron/RAM.scala:9:19
  input  [15:0] io_addr,	// src/main/scala/Megatron/RAM.scala:9:19
  input         io_write,	// src/main/scala/Megatron/RAM.scala:9:19
  output [7:0]  io_out	// src/main/scala/Megatron/RAM.scala:9:19
);

  ram_65536x8 ram_ext (	// src/main/scala/Megatron/RAM.scala:18:25
    .R0_addr (io_addr),
    .R0_en   (1'h1),	// src/main/scala/Megatron/RAM.scala:7:8
    .R0_clk  (~clock),	// src/main/scala/Megatron/RAM.scala:14:24
    .R0_data (io_out),
    .W0_addr (io_addr),
    .W0_en   (io_write),
    .W0_clk  (~clock),	// src/main/scala/Megatron/RAM.scala:14:24
    .W0_data (io_in)
  );
endmodule

