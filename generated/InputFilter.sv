// Generated by CIRCT firtool-1.62.0
module InputFilter(
  input        clock,
               reset,
               io_input,
  output [3:0] io_output
);

  reg [3:0] countReg;
  reg       inputReg;
  reg [2:0] shifterReg;
  reg [3:0] reCounterReg;
  reg       REG;
  always @(posedge clock) begin
    automatic logic filtredInput;
    filtredInput =
      shifterReg[0] & shifterReg[1] | shifterReg[0] & shifterReg[2] | shifterReg[1]
      & shifterReg[2];
    if (reset) begin
      countReg <= 4'h0;
      inputReg <= 1'h0;
      shifterReg <= 3'h0;
      reCounterReg <= 4'h0;
    end
    else begin
      if (countReg == 4'h9) begin
        countReg <= 4'h0;
        inputReg <= io_input;
        shifterReg <= {shifterReg[1:0], inputReg};
      end
      else
        countReg <= countReg + 4'h1;
      if (filtredInput & ~REG)
        reCounterReg <= reCounterReg + 4'h1;
    end
    REG <= filtredInput;
  end // always @(posedge)
  assign io_output = reCounterReg;
endmodule

